@page
@model Klothing.Pages.ProductsPage.IndexModel;


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

@{
    //var categories = Model.Categories.GroupBy(p => p.Id);
}
<ul>

@foreach(var category in Model.Categories)
{
    <li><a asp-page="./index" asp-route-categoryId="@category.Id">@category.Name</a></li>
}
</ul>
@{
    //var selectedCategoryId = Request.Query["categoryId"].ToString();
    //var products = Model.Products;
    //if(!string.IsNullOrEmpty(selectedCategoryId))
    //{
    //    int categoryId = int.Parse(selectedCategoryId);
    //    products = products.Where(p => p.Makeup.CategoryId == categoryId).ToList();
    //}
    var productsByMakeup = Model.Products.GroupBy(p => p.MakeupId);
}
@foreach (var makeupGroup in productsByMakeup)
{
    <div class="container" id="product-@makeupGroup.Key">
    <h2>product-@makeupGroup</h2>
        <section>
            <img class="img-fluid" src="~/img/@makeupGroup.First().Image" data-img="@makeupGroup.FirstOrDefault().Image">
            <h3> @Html.DisplayFor(modelItem => @makeupGroup.First().Name)</h3>
            <p data-description="@makeupGroup.First().Description">
                @Html.DisplayFor(modelItem => @makeupGroup.First().Description)
            </p>
            <p>
                @Html.DisplayFor(modelItem => @makeupGroup.First().Price)
            </p>
        </section>
    </div>

    @foreach (var item in makeupGroup)
    {
        <button class="btn btn-primary product-btn" data-id="@item.Makeup.Id" data-itemImage="@item.Image">@item.Name</button>
        @if (User.IsInRole("Admin"))
        {
            <td>
                @Html.DisplayFor(modelItem => item.QuantityInStock)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        }


        <button class="btn btn-outline-primary"><a asp-page="./AddCartItem" asp-route-productId="@item.Id">Add to Cart</a></button>
    }

    //we can only achieve this using javascript
    //as it is client-side
    <script>
        $('.product-btn').unbind('click').click(function(){
             @*alert("clicked");*@
            @*//get the product id from buttons data-id*@
            var makeupId = $(this).data('id');
            var productImage = $(this).data('itemImage');
            @*alert(productImage);*@
            var container = $('#product-'+makeupId);

            @*//update the image*@
            var image = container.find('img');
            image.attr('src', 'img/' + productImage);
            @*//update details*@
            var description = container.find('p').eq(0);
            description.text(description.data('description'));
            @*alert(description.data('description'));*@


        });
        </script>
 
}

